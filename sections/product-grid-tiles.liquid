<section id="section-{{ section.id }}" class="product-grid-tiles">
  <div class="container">
    {% if section.settings.heading != blank %}
      <h2 class="heading">{{ section.settings.heading }}</h2>
    {% endif %}
    {% if section.settings.subheading != blank %}
      <p class="subheading">{{ section.settings.subheading }}</p>
    {% endif %}

    <!-- Filter and Sort Bar -->
    <div class="filter-sort-bar">
      <div class="filter-section">
        <span class="filter-label">Filter:</span>
        <select class="filter-dropdown" id="availability-filter">
          <option value="">Verfügbarkeit</option>
          <option value="available">Verfügbar</option>
          <option value="unavailable">Nicht verfügbar</option>
        </select>
        <select class="filter-dropdown" id="price-filter">
          <option value="">Preis</option>
          <option value="low-high">Niedrig zu Hoch</option>
          <option value="high-low">Hoch zu Niedrig</option>
        </select>
      </div>
      
      <div class="sort-section">
        <span class="sort-label">Sortieren nach:</span>
        <select class="sort-dropdown" id="sort-dropdown">
          <option value="title-asc">Alphabetisch, A-Z</option>
          <option value="title-desc">Alphabetisch, Z-A</option>
          <option value="price-asc">Preis aufsteigend</option>
          <option value="price-desc">Preis absteigend</option>
        </select>
      </div>
      
      <div class="product-count" id="product-count">
        {% assign products_source = collections[section.settings.collection].products | default: collections.all.products %}
        {% assign product_limit = section.settings.products_to_show %}
        {% assign total_products = products_source.size %}
        {% if product_limit < total_products %}
          {% assign display_count = product_limit %}
        {% else %}
          {% assign display_count = total_products %}
        {% endif %}
        {{ display_count }} Produkte
      </div>
    </div>

    <div class="grid">
      {% comment %} Produkte laden: Entweder aus Collection oder alle {% endcomment %}
      {% if section.settings.collection != blank %}
        {% assign products_source = collections[section.settings.collection].products %}
      {% else %}
        {% assign products_source = collections.all.products %}
      {% endif %}

      {% comment %} Produktlimit anwenden {% endcomment %}
      {% assign product_limit = section.settings.products_to_show %}
      
      {% for product in products_source limit: product_limit %}
        <a
          href="{{ product.url }}"
          class="product-card"
          aria-label="{{ product.title | escape }}"
          data-product-title="{{ product.title | escape }}"
          data-product-price="{{ product.price }}"
          data-product-available="{{ product.available }}"
          data-product-id="{{ product.id }}"
        >
          <div class="product-card__image-container">
            {% if product.featured_image %}
              <img
                src="{{ product.featured_image | image_url: width: 600 }}"
                srcset="
                  {{ product.featured_image | image_url: width: 300 }} 300w,
                  {{ product.featured_image | image_url: width: 450 }} 450w,
                  {{ product.featured_image | image_url: width: 600 }} 600w
                "
                sizes="(min-width: 1280px) 25vw, (min-width: 768px) 33vw, 50vw"
                alt="{{ product.featured_image.alt | default: product.title | escape }}"
                loading="lazy"
                class="product-card__image"
              />
            {% else %}
              <div class="product-card__placeholder">
                <span class="product-card__placeholder-text">{{ product.title }}</span>
              </div>
            {% endif %}
          </div>

          <div class="product-card__content">
            <div class="product-card__header">
              <h3 class="product-card__title">{{ product.title }}</h3>
              <div class="product-card__availability">
                {% if product.available %}
                  <svg class="availability-icon" width="16" height="16" viewBox="0 0 16 16" fill="none">
                    <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z" fill="#10b981"/>
                  </svg>
                  <span class="availability-text">Verfügbar</span>
                {% else %}
                  <svg class="availability-icon" width="16" height="16" viewBox="0 0 16 16" fill="none">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" fill="#dc2626"/>
                    <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" fill="#dc2626"/>
                  </svg>
                  <span class="availability-text">Nicht verfügbar</span>
                {% endif %}
              </div>
            </div>
            
            {% if section.settings.show_price %}
              <div class="product-card__price">
                {% if product.compare_at_price > product.price %}
                  <span class="price--sale">{{ product.price | money }}</span>
                  <span class="price--compare">{{ product.compare_at_price | money }}</span>
                {% else %}
                  <span class="price">{{ product.price | money }}</span>
                {% endif %}
              </div>
            {% endif %}
          </div>
        </a>
      {% else %}
        <div class="empty">
          <p>Keine Produkte gefunden.</p>
        </div>
      {% endfor %}
    </div>

    {% if section.settings.show_view_all and section.settings.collection != blank %}
      <div class="view-all">
        <a href="{{ collections[section.settings.collection].url }}" class="btn btn--secondary">
          Alle Produkte anzeigen
        </a>
      </div>
    {% endif %}
  </div>

  {% style %}
    #section-{{ section.id }}{ background: {{ section.settings.section_bg | default: '#ffffff' }}; color: #0f172a; }
    #section-{{ section.id }} .container{ max-width: {{ section.settings.max_width }}px; margin:0 auto; padding: clamp(24px, 3vw, 40px) clamp(16px, 4vw, 50px); }

    #section-{{ section.id }} .heading{ font-size: clamp(28px, 2vw + 8px, 40px); font-weight: 800; margin: 0 0 8px; color: #111827; letter-spacing: -0.02em; }
    #section-{{ section.id }} .subheading{ color:#475569; margin:0 0 24px; max-width: 70ch; font-size: 16px; }

    /* Filter and Sort Bar */
    #section-{{ section.id }} .filter-sort-bar{ 
      display: flex; 
      align-items: center; 
      justify-content: space-between; 
      gap: 20px; 
      margin-bottom: 32px; 
      padding: 16px 0; 
      border-bottom: 1px solid #e2e8f0; 
      flex-wrap: wrap; 
    }
    
    #section-{{ section.id }} .filter-section{ 
      display: flex; 
      align-items: center; 
      gap: 12px; 
      flex: 1; 
    }
    
    #section-{{ section.id }} .sort-section{ 
      display: flex; 
      align-items: center; 
      gap: 12px; 
    }
    
    #section-{{ section.id }} .filter-label, 
    #section-{{ section.id }} .sort-label{ 
      font-size: 14px; 
      font-weight: 600; 
      color: #374151; 
      white-space: nowrap; 
    }
    
    #section-{{ section.id }} .filter-dropdown, 
    #section-{{ section.id }} .sort-dropdown{ 
      padding: 8px 12px; 
      border: 1px solid #d1d5db; 
      border-radius: 6px; 
      background: #ffffff; 
      font-size: 14px; 
      color: #374151; 
      min-width: 140px; 
      cursor: pointer; 
    }
    
    #section-{{ section.id }} .product-count{ 
      font-size: 14px; 
      font-weight: 500; 
      color: #6b7280; 
      white-space: nowrap; 
    }

    /* Product Grid */
    #section-{{ section.id }} .grid{ 
      display: grid; 
      grid-template-columns: repeat({{ section.settings.columns_mobile }}, 1fr); 
      gap: {{ section.settings.gap }}px; 
    }
    @media (min-width: 768px){ 
      #section-{{ section.id }} .grid{ 
        grid-template-columns: repeat({{ section.settings.columns_tablet | at_least: 2 }}, 1fr); 
      } 
    }
    @media (min-width: 1280px){ 
      #section-{{ section.id }} .grid{ 
        grid-template-columns: repeat({{ section.settings.columns_desktop | at_least: 2 }}, 1fr); 
      } 
    }

    /* Product Cards */
    #section-{{ section.id }} .product-card{ 
      display: block; 
      background: #ffffff; 
      border: 1px solid #e2e8f0; 
      border-radius: 16px; 
      overflow: hidden; 
      box-shadow: 0 1px 2px rgba(2,6,23,.04); 
      text-decoration: none; 
      color: inherit; 
      transition: transform 0.3s ease, box-shadow 0.3s ease; 
    }
    
    #section-{{ section.id }} .product-card:hover{ 
      transform: translateY(-2px); 
      box-shadow: 0 4px 12px rgba(2,6,23,.08); 
    }

    #section-{{ section.id }} .product-card__image-container{ 
      position: relative; 
      width: 100%; 
      aspect-ratio: 4/3; 
      background: #ffffff; 
      display: flex; 
      align-items: center; 
      justify-content: center; 
      overflow: hidden; 
    }
    
    #section-{{ section.id }} .product-card__image{ 
      width: 100%; 
      height: 100%; 
      object-fit: contain; 
      transition: transform 0.3s ease; 
    }
    
    #section-{{ section.id }} .product-card:hover .product-card__image{ 
      transform: scale(1.05); 
    }
    
    #section-{{ section.id }} .product-card__placeholder{ 
      width: 100%; 
      height: 100%; 
      display: flex; 
      align-items: center; 
      justify-content: center; 
      background: #ffffff; 
    }
    
    #section-{{ section.id }} .product-card__placeholder-text{ 
      font-size: 18px; 
      font-weight: 600; 
      color: #9ca3af; 
      text-align: center; 
      padding: 20px; 
    }

    #section-{{ section.id }} .product-card__content{ 
      padding: 16px; 
    }
    
    #section-{{ section.id }} .product-card__header{ 
      display: flex; 
      justify-content: space-between; 
      align-items: flex-start; 
      margin-bottom: 8px; 
      gap: 12px; 
    }
    
    #section-{{ section.id }} .product-card__title{ 
      font-size: 16px; 
      font-weight: 600; 
      color: #111827; 
      line-height: 1.3; 
      margin: 0; 
      flex: 1; 
    }
    
    #section-{{ section.id }} .product-card__availability{ 
      display: flex; 
      align-items: center; 
      gap: 4px; 
      white-space: nowrap; 
    }
    
    #section-{{ section.id }} .availability-text{ 
      font-size: 14px; 
      font-weight: 500; 
    }
    
    /* Verfügbarkeits-Status über JavaScript gesetzt */
    
    #section-{{ section.id }} .product-card__price{ 
      font-size: 16px; 
      font-weight: 700; 
      color: #111827; 
    }
    
    #section-{{ section.id }} .price--sale{ 
      color: #dc2626; 
    }
    
    #section-{{ section.id }} .price--compare{ 
      font-size: 14px; 
      font-weight: 400; 
      color: #64748b; 
      text-decoration: line-through; 
      margin-left: 8px; 
    }

    /* View All Button */
    #section-{{ section.id }} .view-all{ margin-top: 32px; text-align: center; }
    #section-{{ section.id }} .btn{ display: inline-block; padding: 12px 32px; font-size: 16px; font-weight: 600; border-radius: 8px; text-decoration: none; transition: all 0.2s ease; }
    #section-{{ section.id }} .btn--secondary{ background: #fff; color: #0f172a; border: 2px solid #e2e8f0; }
    #section-{{ section.id }} .btn--secondary:hover{ background: #f1f5f9; border-color: #cbd5e1; }

    /* Empty state */
    #section-{{ section.id }} .empty{ background:#fff; border:1px solid #e2e8f0; border-radius:16px; padding:32px; color:#475569; text-align:center; grid-column: 1 / -1; }

    /* Responsive adjustments */
    @media (max-width: 767px) {
      #section-{{ section.id }} .filter-sort-bar{ 
        flex-direction: column; 
        align-items: stretch; 
        gap: 16px; 
      }
      
      #section-{{ section.id }} .filter-section, 
      #section-{{ section.id }} .sort-section{ 
        justify-content: space-between; 
      }
      
      #section-{{ section.id }} .product-count{ 
        text-align: center; 
      }
    }

    /* Filter states */
    #section-{{ section.id }} .product-card.hidden {
      display: none;
    }
  {% endstyle %}

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const sectionId = 'section-{{ section.id }}';
      const productCards = document.querySelectorAll(`#${sectionId} .product-card`);
      const availabilityFilter = document.getElementById('availability-filter');
      const priceFilter = document.getElementById('price-filter');
      const sortDropdown = document.getElementById('sort-dropdown');
      const productCount = document.getElementById('product-count');
      const grid = document.querySelector(`#${sectionId} .grid`);

      // Verfügbarkeits-Farben setzen
      function setAvailabilityColors() {
        productCards.forEach(card => {
          const isAvailable = card.dataset.productAvailable === 'true';
          const availabilityText = card.querySelector('.availability-text');
          if (availabilityText) {
            if (isAvailable) {
              availabilityText.style.color = '#10b981'; // Grün für verfügbar
            } else {
              availabilityText.style.color = '#dc2626'; // Rot für nicht verfügbar
            }
          }
        });
      }

      // Initiale Farben setzen
      setAvailabilityColors();

      function updateProductCount() {
        const visibleProducts = document.querySelectorAll(`#${sectionId} .product-card:not(.hidden)`);
        productCount.textContent = `${visibleProducts.length} Produkte`;
      }

      function filterProducts() {
        const availabilityValue = availabilityFilter.value;
        const priceValue = priceFilter.value;

        productCards.forEach(card => {
          const isAvailable = card.dataset.productAvailable === 'true';
          const price = parseInt(card.dataset.productPrice);
          
          let showCard = true;

          // Verfügbarkeits-Filter
          if (availabilityValue === 'available' && !isAvailable) {
            showCard = false;
          } else if (availabilityValue === 'unavailable' && isAvailable) {
            showCard = false;
          }

          // Preis-Filter
          if (showCard && priceValue === 'low-high') {
            // Sortierung nach Preis aufsteigend wird in sortProducts() behandelt
          } else if (showCard && priceValue === 'high-low') {
            // Sortierung nach Preis absteigend wird in sortProducts() behandelt
          }

          if (showCard) {
            card.classList.remove('hidden');
          } else {
            card.classList.add('hidden');
          }
        });

        // Sortierung anwenden
        sortProducts();

        // Produktanzahl aktualisieren
        updateProductCount();
      }

      function sortProducts() {
        const sortValue = sortDropdown.value;
        const visibleCards = Array.from(productCards).filter(card => !card.classList.contains('hidden'));
        
        visibleCards.sort((a, b) => {
          switch (sortValue) {
            case 'title-asc':
              return a.dataset.productTitle.localeCompare(b.dataset.productTitle);
            case 'title-desc':
              return b.dataset.productTitle.localeCompare(a.dataset.productTitle);
            case 'price-asc':
              return parseInt(a.dataset.productPrice) - parseInt(b.dataset.productPrice);
            case 'price-desc':
              return parseInt(b.dataset.productPrice) - parseInt(a.dataset.productPrice);
            default:
              return 0;
          }
        });

        // Karten in neuer Reihenfolge einfügen
        visibleCards.forEach(card => {
          grid.appendChild(card);
        });
      }

      // Event Listeners
      availabilityFilter.addEventListener('change', filterProducts);
      priceFilter.addEventListener('change', function() {
        if (this.value === 'low-high') {
          sortDropdown.value = 'price-asc';
        } else if (this.value === 'high-low') {
          sortDropdown.value = 'price-desc';
        }
        filterProducts();
      });
      sortDropdown.addEventListener('change', function() {
        // Preis-Filter zurücksetzen wenn Sortierung geändert wird
        if (this.value === 'price-asc' || this.value === 'price-desc') {
          priceFilter.value = this.value === 'price-asc' ? 'low-high' : 'high-low';
        } else {
          priceFilter.value = '';
        }
        sortProducts();
        updateProductCount();
      });
    });
  </script>
</section>

{% schema %}
{
  "name": "Product Grid Tiles",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Überschriften"
    },
    { "type": "text", "id": "heading", "label": "Überschrift", "default": "Unsere Produkte" },
    { "type": "text", "id": "subheading", "label": "Untertitel", "default": "Entdecke unsere Produktpalette" },

    {
      "type": "header",
      "content": "Produktauswahl"
    },
    { 
      "type": "collection", 
      "id": "collection", 
      "label": "Kollektion", 
      "info": "Leer lassen, um alle Produkte anzuzeigen" 
    },
    { 
      "type": "range", 
      "id": "products_to_show", 
      "min": 4, 
      "max": 50, 
      "step": 2, 
      "label": "Anzahl der Produkte", 
      "default": 12 
    },
    { 
      "type": "checkbox", 
      "id": "show_view_all", 
      "label": "\"Alle anzeigen\" Button anzeigen", 
      "default": true,
      "info": "Nur sichtbar wenn eine Kollektion ausgewählt ist"
    },

    {
      "type": "header",
      "content": "Layout"
    },
    { "type": "range", "id": "max_width", "min": 900, "max": 1600, "step": 50, "unit": "px", "label": "Container Breite", "default": 1400 },
    { "type": "color", "id": "section_bg", "label": "Hintergrund (Section)", "default": "#f8fafc" },

    { "type": "select", "id": "columns_mobile", "label": "Spalten (Mobil)", "default": "2", "options": [
      { "value": "1", "label": "1 Spalte" },
      { "value": "2", "label": "2 Spalten" }
    ]},
    { "type": "select", "id": "columns_tablet", "label": "Spalten (Tablet)", "default": "3", "options": [
      { "value": "2", "label": "2 Spalten" },
      { "value": "3", "label": "3 Spalten" },
      { "value": "4", "label": "4 Spalten" }
    ]},
    { "type": "select", "id": "columns_desktop", "label": "Spalten (Desktop)", "default": "4", "options": [
      { "value": "2", "label": "2 Spalten" },
      { "value": "3", "label": "3 Spalten" },
      { "value": "4", "label": "4 Spalten" },
      { "value": "5", "label": "5 Spalten" }
    ]},

    {
      "type": "header",
      "content": "Kachel-Styling"
    },
    { "type": "select", "id": "aspect_ratio", "label": "Bild Seitenverhältnis", "default": "4-3", "options": [
      { "value": "16-10", "label": "16:10" },
      { "value": "4-3", "label": "4:3 (empfohlen)" },
      { "value": "1-1", "label": "1:1" }
    ]},
    { "type": "select", "id": "tile_radius", "label": "Eckenradius", "default": "m", "options": [
      { "value": "none", "label": "0" },
      { "value": "m", "label": "12px (empfohlen)" },
      { "value": "l", "label": "16px" },
      { "value": "xl", "label": "24px" }
    ]},
    { "type": "select", "id": "tile_bg_style", "label": "Kachel Hintergrund", "default": "white", "options": [
      { "value": "light", "label": "Hell (slate-100)" },
      { "value": "white", "label": "Weiß" }
    ]},

    { "type": "range", "id": "gap", "min": 8, "max": 32, "step": 2, "unit": "px", "label": "Kachelabstand", "default": 20 },
    { "type": "range", "id": "image_padding", "min": 0, "max": 40, "step": 2, "unit": "px", "label": "Bild-Innenabstand", "default": 16 },

    {
      "type": "header",
      "content": "Produktinformationen"
    },
    { "type": "checkbox", "id": "show_price", "label": "Preis anzeigen", "default": true },
    { "type": "select", "id": "image_fit", "label": "Bildmodus", "default": "contain", "options": [
      { "value": "contain", "label": "Contain (empfohlen)" },
      { "value": "cover",   "label": "Cover" }
    ]}
  ],
  "presets": [
    {
      "name": "Product Grid Tiles"
    }
  ]
}
{% endschema %}

